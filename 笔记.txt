1、服务级 ——  共同的操作
    数据库、redis、错误处理、404、log
2、每个app ——  自己的工作


1、尽量可配置
2、每个应用有独立的进程-性能、稳定性、*热更新


node服务
1、无缝更新
2、session管理
3、静态文件
4、后端渲染
5、redis


无缝更新

node.js模块 —— 单例模式


1、模块自带缓存的
    封装一个myRequire
2、worker的exit事件，
    子进程退出：
    1、异常退出 -> 重启
    2、正常退出
